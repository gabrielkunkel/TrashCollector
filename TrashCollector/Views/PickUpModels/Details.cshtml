@model TrashCollector.Models.PickUpModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>PickUpModel</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Customer.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Customer.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Scheduled)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Scheduled)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Pending)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Pending)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Completed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Completed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Recurring)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Recurring)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Cost)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cost)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Paid)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Paid)
        </dd>

    </dl>
</div>

<div id="map"></div>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=[key]&callback=initMap">
</script>
<script>
        var geocoder;
        var map;
        var address = '@(Model.Customer.Address.StreetAddress)' +
            ', @(Model.Customer.Address.City)' +
            ', @(Model.Customer.Address.State)' +
            ' @(Model.Customer.Address.ZipCode)';


 function initMap() {    
    map = new google.maps.Map(
    document.getElementById('map'), {zoom: 15, center: {lat: 41.881832, lng: -87.623177} });

     geocoder = new google.maps.Geocoder();

     codeAddress();
 }

    function codeAddress() {

        geocoder.geocode({ 'address': address }, function (results, status) {

        if( status == google.maps.GeocoderStatus.OK ) {

            console.log("results: ", results);
            console.log("status: ", status);

            //In this case it creates a marker, but you can get the lat and lng from the location.LatLng
            map.setCenter(results[0].geometry.location);

            var marker = new google.maps.Marker( {
                map: map,
                position: results[0].geometry.location
            } );
        } else {
            alert( 'Geocode was not successful for the following reason: ' + status );
        }
    } );
}

</script>



<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.PickUpId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
